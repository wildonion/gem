// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN RUST INSTEAD.

#[allow(unused)]
use spacetimedb_sdk::{
    anyhow::{anyhow, Result},
    identity::Identity,
    reducer::{Reducer, ReducerCallbackId, Status},
    sats::{de::Deserialize, ser::Serialize},
    spacetimedb_lib,
    table::{TableIter, TableType, TableWithPrimaryKey},
    Address,
};

#[derive(Serialize, Deserialize, Clone, PartialEq, Debug)]
pub struct AddArgs {
    pub screen_cid: String,
}

impl Reducer for AddArgs {
    const REDUCER_NAME: &'static str = "add";
}

#[allow(unused)]
pub fn add(screen_cid: String) {
    AddArgs { screen_cid }.invoke();
}

#[allow(unused)]
pub fn on_add(
    mut __callback: impl FnMut(&Identity, Option<Address>, &Status, &String) + Send + 'static,
) -> ReducerCallbackId<AddArgs> {
    AddArgs::on_reducer(move |__identity, __addr, __status, __args| {
        let AddArgs { screen_cid } = __args;
        __callback(__identity, __addr, __status, screen_cid);
    })
}

#[allow(unused)]
pub fn once_on_add(
    __callback: impl FnOnce(&Identity, Option<Address>, &Status, &String) + Send + 'static,
) -> ReducerCallbackId<AddArgs> {
    AddArgs::once_on_reducer(move |__identity, __addr, __status, __args| {
        let AddArgs { screen_cid } = __args;
        __callback(__identity, __addr, __status, screen_cid);
    })
}

#[allow(unused)]
pub fn remove_on_add(id: ReducerCallbackId<AddArgs>) {
    AddArgs::remove_on_reducer(id);
}
